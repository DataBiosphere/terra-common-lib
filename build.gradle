plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'

    id 'com.github.ben-manes.versions' version '0.33.0'
    id 'com.github.spotbugs' version '4.5.1'
    id 'com.diffplug.gradle.spotless' version '3.27.2'
    id 'com.jfrog.artifactory' version '4.13.0'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
}

repositories {
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

group 'bio.terra'
version '0.0.30-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

def OPENCENSUS_VERSION = '0.28.+'

dependencies {
    implementation group: 'bio.terra', name: 'stairway', version: '0.0.37-SNAPSHOT'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.+'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.+'
    implementation group: 'com.google.cloud', name: 'google-cloud-core', version: '1.94.+'
    implementation group: 'com.google.code.findbugs', name: 'annotations', version: '3.+'
    implementation group: 'com.google.apis', name: 'google-api-services-logging', version: 'v2+'
    implementation group: 'io.kubernetes', name: 'client-java', version: '10.0.0'
    api group: 'io.opencensus', name: 'opencensus-api', version: OPENCENSUS_VERSION
    api group: "io.opencensus", name: "opencensus-contrib-spring", version: OPENCENSUS_VERSION
    implementation group: "io.opencensus", name: "opencensus-exporter-trace-stackdriver", version: OPENCENSUS_VERSION
    // commons-lang3 version is managed by the Spring Boot plugin
    implementation group: 'org.apache.commons', name: 'commons-lang3'
    implementation group: 'org.apache.commons', name: 'commons-dbcp2'
    implementation group: 'org.apache.commons', name: 'commons-pool2'
    implementation group: 'org.hashids', name: 'hashids', version: '1.+'
    implementation group: 'org.liquibase' , name: 'liquibase-core', version: '3.10.0'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    implementation group: 'org.springframework' , name: 'spring-context'
    implementation group: 'org.springframework' , name: 'spring-core'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'

    runtimeOnly group: 'io.opencensus', name: 'opencensus-impl', version: OPENCENSUS_VERSION

    api group: 'com.google.guava', name: 'guava', version: '29.0-jre'

    // Jsonpath version is managed by the Spring Boot plugin
    testImplementation group: 'com.jayway.jsonpath', name: 'json-path'
    testImplementation group: 'io.opencensus', name: 'opencensus-impl', version: OPENCENSUS_VERSION
    testImplementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    // Jupiter version is managed by the Spring Boot plugin
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.+'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.1'

    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
}

dependencyLocking {
    lockMode = LockMode.STRICT
    lockAllConfigurations() // see https://docs.gradle.org/current/userguide/dependency_locking.html
}

// We use Spring Boot gradle plugin in a non-Spring Boot environment to manage Spring Boot dependency.
// Disable bootJar and enable jar task back since this is actually not a Spring Boot app.
bootJar {
    enabled = false
}

jar {
    enabled = true
}

// for scans
if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

// Linter
spotless {
    java {
        googleJavaFormat()
        targetExclude "${buildDir}/**"
    }
}

compileJava.dependsOn spotlessApply

// Static analysis
spotbugs {
    effort = 'max'
    // This makes the "html" reports come out in plain text so you can just open the file in IntelliJ
    // and look at your bugs instead of having to switch to a browser.
    extraArgs = ['-emacs']
}
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main.html")
        }
    }
}
spotbugsTest {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/test.html")
        }
    }
}

tasks.withType(Test) {
    testLogging {
        events = ["passed", "failed", "skipped"]
        // Causes the correct line to be reported on an exception.
        exceptionFormat = org.gradle.api.tasks.testing.logging.TestExceptionFormat.FULL
        reports {
            // Write XML file (used by CircleCI, Jenkins, etc) to build/test-results/*
            junitXml.enabled = true
            // Write human-readable test report to build/reports/tests/*
            html.enabled = true
        }
    }
}

test {
    useJUnitPlatform()
}

task unitTest(type: Test) {
    useJUnitPlatform {
        includeTags 'unit'
    }
}

// TODO(gjordan): turn off doclint to remove "no @return value" warnings
// https://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
java {
    withJavadocJar()
}

def artifactory_repo_key = System.getenv("ARTIFACTORY_REPO_KEY") != null ? System.getenv("ARTIFACTORY_REPO_KEY") : 'libs-snapshot-local'
def artifactory_username = System.getenv('ARTIFACTORY_USERNAME')
def artifactory_password = System.getenv('ARTIFACTORY_PASSWORD')

publishing {
    publications {
        terraCommonLib(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    publish {
        contextUrl = 'https://broadinstitute.jfrog.io/broadinstitute/'
        repository {
            repoKey = "${artifactory_repo_key}"
            username = "${artifactory_username}"
            password = "${artifactory_password}"
        }
        defaults {
            publications('terraCommonLib')
            publishArtifacts = true
            publishPom = true
        }
    }
}
