plugins {
    id 'idea'
    id 'jacoco'
    id 'java-library'
    id 'maven-publish'

    id 'com.diffplug.spotless' version '6.25.0'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'com.jfrog.artifactory' version '5.2.0'
    id 'org.sonarqube' version '4.4.1.3373'
    // [dd 2021-05-17] Use of Spring dependency management generates invalid POM, making
    // it impossible to publish to mavenLocal. In order to make TCL testable, I have
    // removed this plugin and filled in specific version numbers. I also removed all
    // version numbers with `+` in them. Was:
    //     id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.springframework.boot' version '3.2.3'
    id 'ru.vyarus.quality' version '5.0.0'
}

group = gradle.projectGroup

project.ext {
    isCiServer = System.getenv().containsKey("CI")
}

// If true, search local repository (~/.m2/repository/) first for dependencies.
def useMavenLocal = false
repositories {
    if (useMavenLocal) {
        mavenLocal() // must be listed first to take effect
    }
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release-local/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

dependencies {
    // Common utils
    implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.11.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
    implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.12.0'
    implementation group: 'org.hashids', name: 'hashids', version: '1.0.3'

    // JSON processing
    testImplementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.9.0'

    // Spring
    implementation group: 'org.springframework', name: 'spring-context', version: '6.1.4'
    implementation group: 'org.springframework', name: 'spring-core', version: '6.1.4'
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.5'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc', version: '3.2.3'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '3.2.3'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '3.2.3'

    // Misc. Services
    implementation group: 'io.kubernetes', name: 'client-java', version: '20.0.1'
    implementation group: 'io.prometheus', name: 'simpleclient_httpserver', version: '0.16.0'
    implementation group: 'jakarta.ws.rs', name: 'jakarta.ws.rs-api', version: '3.1.0'

    // Google dependencies
    constraints {
        // "-jre" for Java 8 or higher
        implementation group: 'com.google.guava', name: 'guava', version: '33.0.0-jre'
    }
    // use common bom
    implementation platform('com.google.cloud:libraries-bom:26.33.0')
    implementation group: 'com.google.cloud', name: 'google-cloud-core'
    implementation group: 'com.google.cloud', name: 'google-cloud-pubsub'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.25.3'
    api group: 'com.google.guava', name: 'guava'

    // Database
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.26.0'
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.7.2'

    // Terra libraries
    implementation group: 'org.broadinstitute.dsde.workbench', name: 'sam-client_2.13', version: '0.1-0c4b377'
    var stairwayVersion= '1.0.0-SNAPSHOT'
    api "bio.terra:stairway-gcp:${stairwayVersion}"
    implementation "bio.terra:stairway-azure:${stairwayVersion}"

    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.12'
    implementation group: 'com.google.apis', name: 'google-api-services-logging', version: 'v2-rev20240207-2.0.0'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.5'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'

    // OpenTelemetry BOMs
    implementation platform('io.opentelemetry:opentelemetry-bom:1.34.1')
    implementation platform('io.opentelemetry:opentelemetry-bom-alpha:1.34.1-alpha')
    implementation platform('io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.0.0')
    implementation platform('io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:2.0.0-alpha')
    // OpenTelemetry dependencies versioned by BOMs
    api 'io.opentelemetry:opentelemetry-api'
    implementation 'io.opentelemetry:opentelemetry-sdk'
    implementation 'io.opentelemetry:opentelemetry-sdk-metrics'
    implementation 'io.opentelemetry:opentelemetry-exporter-logging'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-webmvc-6.0'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-boot'
    implementation 'io.opentelemetry:opentelemetry-exporter-prometheus'
    implementation 'io.opentelemetry:opentelemetry-extension-incubator'

    // Google cloud open telemetry exporters
    implementation 'com.google.cloud.opentelemetry:exporter-trace:0.27.0'
    implementation 'com.google.cloud.opentelemetry:exporter-metrics:0.27.0'

    // these are required for tracing in tests
    testImplementation 'org.springframework:spring-aop:6.1.4'
    testImplementation 'org.springframework:spring-aspects:6.1.4'

    // Testing
    testImplementation('org.springframework.boot:spring-boot-starter-test:3.2.3') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.10.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.2'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.11.0'
    testImplementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.6'
    testImplementation 'org.awaitility:awaitility:4.2.0'

    // Transitive dependency constraints due to security vulnerabilities in prior versions.
    // These are not directly included, they are just constrained if they are pulled in as
    // transitive dependencies.
    constraints {
        implementation('org.scala-lang:scala-library:2.13.13')
        implementation('org.json:json:20240205')
        implementation('io.grpc:grpc-xds:1.62.2')
        // commons-compress comes from io.kubernetes:client-java, which doesn't yet have a version
        // that pulls in the non-vulnerable version of commons-compress.
        implementation('org.apache.commons:commons-compress:1.26.0')
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

// for scans
if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

def gradleIncDir = "$rootDir/gradle"
apply from: "$gradleIncDir/application.gradle"
apply from: "$gradleIncDir/jacoco.gradle"
apply from: "$gradleIncDir/javadoc.gradle"
apply from: "$gradleIncDir/publishing.gradle"
apply from: "$gradleIncDir/quality.gradle"
apply from: "$gradleIncDir/sonarqube.gradle"
apply from: "$gradleIncDir/spotless.gradle"
apply from: "$gradleIncDir/testing.gradle"
