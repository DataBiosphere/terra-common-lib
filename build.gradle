plugins {
    id 'idea'
    id 'jacoco'
    id 'java-library'
    id 'maven-publish'

    id 'com.diffplug.spotless' version '6.25.0'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'com.jfrog.artifactory' version '5.2.5'
    id 'org.sonarqube' version '5.1.0.4882'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.springframework.boot' version '3.3.3'
    id 'ru.vyarus.quality' version '5.0.0'
    id 'com.srcclr.gradle' version '3.1.12'
}

group = gradle.projectGroup

project.ext {
    isCiServer = System.getenv().containsKey("CI")
}

// Spring Boot 3.2.3 pulls in opentelemetry-bom 1.31.0.
// We need >= 1.32.0 so that our HttpServerMetrics can use Meter.setExplicitBucketBoundariesAdvice:
ext['opentelemetry.version'] = '1.41.0'

// If true, search local repository (~/.m2/repository/) first for dependencies.
def useMavenLocal = false
repositories {
    if (useMavenLocal) {
        mavenLocal() // must be listed first to take effect
    }
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release-local/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

dependencies {
    // Throughout, unversioned dependencies might be versioned by Spring dependency manager
    // and/or some other BOM (bill of materials).

    // Common utils
    implementation group: 'org.apache.commons', name: 'commons-dbcp2'
    implementation group: 'org.apache.commons', name: 'commons-lang3'
    implementation group: 'org.apache.commons', name: 'commons-pool2'
    implementation group: 'org.hashids', name: 'hashids', version: '1.0.3'

    // Spring
    implementation group: 'org.springframework.retry', name: 'spring-retry'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'

    // Misc. Services
    implementation group: 'io.kubernetes', name: 'client-java', version: '20.0.1'
    constraints {
        implementation('org.bouncycastle:bcprov-jdk18on:1.78.1') {
            because 'https://broadworkbench.atlassian.net/browse/DCJ-275'
        }
    }
    implementation group: 'io.prometheus', name: 'simpleclient_httpserver', version: '0.16.0'
    implementation group: 'jakarta.ws.rs', name: 'jakarta.ws.rs-api'

    // Google dependencies
    // use common bom
    implementation platform('com.google.cloud:libraries-bom:26.45.0')
    implementation group: 'com.google.cloud', name: 'google-cloud-core'
    implementation group: 'com.google.cloud', name: 'google-cloud-pubsub'
    api group: 'com.google.guava', name: 'guava'

    // Database
    implementation group: 'org.liquibase', name: 'liquibase-core'
    runtimeOnly group: 'org.postgresql', name: 'postgresql'

    // Terra libraries
    implementation group: 'org.broadinstitute.dsde.workbench', name: 'sam-client_2.13', version: '0.1-0c4b377'
    var stairwayVersion= '1.1.12-SNAPSHOT'
    api "bio.terra:stairway-gcp:${stairwayVersion}"
    implementation "bio.terra:stairway-azure:${stairwayVersion}"

    // Logging
    implementation group: 'com.google.apis', name: 'google-api-services-logging', version: 'v2-rev20240503-2.0.0'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.5'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'

    // OpenTelemetry BOMs (opentelemetry-bom versioned by Spring dependency manager)
    implementation platform('io.opentelemetry:opentelemetry-bom-alpha:1.41.0-alpha')
    implementation platform('io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.7.0')
    implementation platform('io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:2.7.0-alpha')
    // OpenTelemetry dependencies versioned by BOMs
    api 'io.opentelemetry:opentelemetry-api'
    implementation 'io.opentelemetry:opentelemetry-sdk'
    implementation 'io.opentelemetry:opentelemetry-sdk-metrics'
    implementation 'io.opentelemetry:opentelemetry-exporter-logging'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-webmvc-6.0'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-boot-autoconfigure'
    implementation 'io.opentelemetry:opentelemetry-exporter-prometheus'
    implementation 'io.opentelemetry:opentelemetry-api-incubator'
    implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'

    // Google cloud open telemetry exporters
    implementation 'com.google.cloud.opentelemetry:exporter-trace:0.31.0'
    implementation 'com.google.cloud.opentelemetry:exporter-metrics:0.31.0'

    // Testing
    testImplementation 'org.springframework:spring-aspects' // for tracing in tests
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
    testImplementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.6'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

// for scans
if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

def gradleIncDir = "$rootDir/gradle"
apply from: "$gradleIncDir/application.gradle"
apply from: "$gradleIncDir/jacoco.gradle"
apply from: "$gradleIncDir/javadoc.gradle"
apply from: "$gradleIncDir/publishing.gradle"
apply from: "$gradleIncDir/quality.gradle"
apply from: "$gradleIncDir/srcclr.gradle"
apply from: "$gradleIncDir/sonarqube.gradle"
apply from: "$gradleIncDir/spotless.gradle"
apply from: "$gradleIncDir/testing.gradle"
